Дима, привет еще раз!
У меня вопрос по тактике работы с исключениями в спринге ( обработку которых я должен сделать до понедельника).
Я опишу как я это понимаю и прошу сориентировать делать ли так, как я написал или делать по-другому.
В моем проекте в основном эксепшены могут возникать:
1. В сервисах, когда используется Oprtional<T> findBy...().orElseThrow(()-> new RepositoryException()) // or DaoException, orElseException...
2. В Custom репозитории и дао, когда используется getConnection(), preparedStatement.executeQuery()

Чтобы приложение не завершало работу, и информировало пользователя, что возникла ошибка и выдавало ее описание, я предлагаю:
1. Все проверяемые исключения по месту чекать, логгировать и перебрасывать свои исключения, называемые от уровня возникновения:
RepositoryException (которое extends RuntimeException); ServiceException и т.п.
2. В контроллерах все методы сервисов обворачивать в try{...}catch(RuntimeException e), и если поймано исключение, то добавлять атрибут 
к сессии или модели с описанием проблемы и переадресовывать на страницу для вывода таких ошибок (например, /error/5xx).

Что скажешь?
   


Дима привет!
Почитал о Richardson Maturity Model
В моем приложении связке с CRUD планирую переименовать uri потакому приципу.
И, соответственно, изменить и добавять контроллеры, которые будут обрабатывать
запросы по ним:

CRUD	Description	HTTP	URL
-----------------------------------------
READ	Get all		GET		/units
READ	Get one		GET		/units/id
-		Get form 	GET		/units/form*	// only sends form for filing fields
CREATE	Create unit	POST	/units
-		Get form	GET		/units/id/form	// only form for update
UPDATE	Upd unit	PATCH	/units/id		// POST will be actually in app.
DELETE	Del unit	DELETE	/units/id
------------------------------------------
* Alishev named it as /units/new*

https://youtu.be/D58pIymCew4?list=PLAma_mKffTOR5o0WNHnY0mTjKxnCgSXrZ&t=551
